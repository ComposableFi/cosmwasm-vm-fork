{"mappings":"umBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,uCC2BT,IAAAE,E,6CA5CA,IAAIC,EAAY,GA6BhB,SAASC,EAAWC,GAClB,OAAQ,GAAKA,GAAKC,QAAO,0EAA4E,MAAQ,G,CAc/GJ,EA1CA,SAA4BH,GAC1B,IAAIQ,EAAQJ,EAAUJ,GAOtB,OALKQ,IACHA,EAOJ,WACE,IACE,MAAM,IAAIN,K,CACV,MAAOO,GACP,IAAIC,GAAW,GAAKD,EAAIE,OAAOC,MAAK,oEAEpC,GAAIF,EAGF,OAAOL,EAAWK,EAAQ,G,CAI9B,MAAO,G,CApBGG,GACRT,EAAUJ,GAAMQ,GAGXA,C,KCZTM,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,uGCGzD,MAAMC,EAAO,IAAIC,MAAM,IAAIC,UAAKC,GAEhCH,EAAKI,UAAKD,EAAW,MAAM,GAAM,GAIjBH,EAAKnB,OAgBI,IAAIwB,WAS7B,MAAMC,EAAoB,IAAIC,YAAY,SAEbD,EAAkBE,WAuDtB,IAAIC,WAS7B,MAAMC,EAAoB,IAAIC,YAAY,QAAS,CAAEC,WAAW,EAAMC,OAAO,IAE7EH,EAAkBI,SAeS,IAAIC,aASH,IAAIC,cC9HfpB,EAAA,SAAAqB,aAA6C,SAAWrB,EAAA,SAAAsB,QAA6C,Q","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-63537e3206105d5e.js","src/typescript_bindings.js","node_modules/@parcel/runtime-js/lib/runtime-358c23b0eaff0650.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"hKvBU\\\":\\\"typescript_bindings.js\\\",\\\"fNRYW\\\":\\\"typescript_bindings_bg.5cfb94f8.wasm\\\"}\"));","\nlet wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachedFloat64Memory0 = new Float64Array();\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0.byteLength === 0) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nlet cachedBigInt64Memory0 = new BigInt64Array();\n\nfunction getBigInt64Memory0() {\n    if (cachedBigInt64Memory0.byteLength === 0) {\n        cachedBigInt64Memory0 = new BigInt64Array(wasm.memory.buffer);\n    }\n    return cachedBigInt64Memory0;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {any} typescript_vm\n* @param {Uint8Array} code\n* @param {string} message\n* @returns {any}\n*/\nexport function vm_instantiate(typescript_vm, code, message) {\n    try {\n        const ptr0 = passArray8ToWasm0(code, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.vm_instantiate(addBorrowedObject(typescript_vm), ptr0, len0, ptr1, len1);\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* @param {any} typescript_vm\n* @param {Uint8Array} code\n* @param {string} message\n* @returns {any}\n*/\nexport function vm_execute(typescript_vm, code, message) {\n    try {\n        const ptr0 = passArray8ToWasm0(code, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.vm_execute(addBorrowedObject(typescript_vm), ptr0, len0, ptr1, len1);\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* @param {any} typescript_vm\n* @param {Uint8Array} code\n* @param {string} message\n* @returns {any}\n*/\nexport function vm_migrate(typescript_vm, code, message) {\n    try {\n        const ptr0 = passArray8ToWasm0(code, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.vm_migrate(addBorrowedObject(typescript_vm), ptr0, len0, ptr1, len1);\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* @param {any} typescript_vm\n* @param {Uint8Array} code\n* @param {string} message\n* @param {bigint} event_handler\n* @returns {any}\n*/\nexport function vm_continue_instantiate(typescript_vm, code, message, event_handler) {\n    try {\n        const ptr0 = passArray8ToWasm0(code, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.vm_continue_instantiate(addBorrowedObject(typescript_vm), ptr0, len0, ptr1, len1, event_handler);\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* @param {any} typescript_vm\n* @param {Uint8Array} code\n* @param {string} message\n* @param {bigint} event_handler\n* @returns {any}\n*/\nexport function vm_continue_execute(typescript_vm, code, message, event_handler) {\n    try {\n        const ptr0 = passArray8ToWasm0(code, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.vm_continue_execute(addBorrowedObject(typescript_vm), ptr0, len0, ptr1, len1, event_handler);\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* @param {any} typescript_vm\n* @param {Uint8Array} code\n* @param {string} message\n* @param {bigint} event_handler\n* @returns {any}\n*/\nexport function vm_continue_migrate(typescript_vm, code, message, event_handler) {\n    try {\n        const ptr0 = passArray8ToWasm0(code, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.vm_continue_migrate(addBorrowedObject(typescript_vm), ptr0, len0, ptr1, len1, event_handler);\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* @param {any} typescript_vm\n* @param {Uint8Array} code\n* @param {any} arg2\n* @returns {any}\n*/\nexport function vm_query(typescript_vm, code, arg2) {\n    try {\n        const ptr0 = passArray8ToWasm0(code, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.vm_query(addBorrowedObject(typescript_vm), ptr0, len0, addHeapObject(arg2));\n        return takeObject(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbg_env_9e26883a7bc78edd = function(arg0) {\n        const ret = getObject(arg0).env();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_info_9293fdf0cba695c2 = function(arg0) {\n        const ret = getObject(arg0).info();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_runningcontractmeta_8dd5ae06ce2e95e6 = function(arg0) {\n        const ret = getObject(arg0).running_contract_meta();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_setcontractmeta_fdd6befff9153a86 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).set_contract_meta(takeObject(arg1), takeObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_contractmeta_6d8fd763446b7ac8 = function(arg0, arg1) {\n        const ret = getObject(arg0).contract_meta(takeObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_querycontinuation_8176f0394ee133da = function(arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).query_continuation(takeObject(arg1), getArrayU8FromWasm0(arg2, arg3));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_continueexecute_0f8d9bd6acc983b3 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        const ret = getObject(arg0).continue_execute(takeObject(arg1), takeObject(arg2), getArrayU8FromWasm0(arg3, arg4), BigInt.asUintN(64, arg5));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_continueinstantiate_ae49dcbeca412a89 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        const ret = getObject(arg0).continue_instantiate(takeObject(arg1), takeObject(arg2), getArrayU8FromWasm0(arg3, arg4), BigInt.asUintN(64, arg5));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_continuemigrate_5b6f19d4d4f4296c = function(arg0, arg1, arg2, arg3, arg4) {\n        const ret = getObject(arg0).continue_migrate(takeObject(arg1), getArrayU8FromWasm0(arg2, arg3), BigInt.asUintN(64, arg4));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_queryraw_b870f9f818225cc7 = function(arg0, arg1, arg2, arg3) {\n        var v0 = getArrayU8FromWasm0(arg2, arg3).slice();\n        wasm.__wbindgen_free(arg2, arg3 * 1);\n        const ret = getObject(arg0).query_raw(takeObject(arg1), v0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_transfer_236212844afdaebe = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).transfer(takeObject(arg1), takeObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_burn_390f1e53343beadc = function(arg0, arg1) {\n        const ret = getObject(arg0).burn(takeObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_balance_473eb0d62ebeee31 = function(arg0, arg1, arg2, arg3) {\n        try {\n            const ret = getObject(arg0).balance(takeObject(arg1), getStringFromWasm0(arg2, arg3));\n            return addHeapObject(ret);\n        } finally {\n            wasm.__wbindgen_free(arg2, arg3);\n        }\n    };\n    imports.wbg.__wbg_allbalance_47be6a71a779d4c8 = function(arg0, arg1) {\n        const ret = getObject(arg0).all_balance(takeObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_queryinfo_824c681ea2edc1da = function(arg0, arg1) {\n        const ret = getObject(arg0).query_info(takeObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_debug_cca143378fe4d9ac = function(arg0, arg1, arg2) {\n        var v0 = getArrayU8FromWasm0(arg1, arg2).slice();\n        wasm.__wbindgen_free(arg1, arg2 * 1);\n        const ret = getObject(arg0).debug(v0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_dbscan_28408cce9f0ffde5 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        let v0;\n        if (arg1 !== 0) {\n            v0 = getArrayU8FromWasm0(arg1, arg2).slice();\n            wasm.__wbindgen_free(arg1, arg2 * 1);\n        }\n        let v1;\n        if (arg3 !== 0) {\n            v1 = getArrayU8FromWasm0(arg3, arg4).slice();\n            wasm.__wbindgen_free(arg3, arg4 * 1);\n        }\n        const ret = getObject(arg0).db_scan(v0, v1, takeObject(arg5));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_dbnext_9c731b72b18cbb2b = function(arg0, arg1) {\n        const ret = getObject(arg0).db_next(arg1 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_secp256k1verify_a7281d1db37882ec = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n        const ret = getObject(arg0).secp256k1_verify(getArrayU8FromWasm0(arg1, arg2), getArrayU8FromWasm0(arg3, arg4), getArrayU8FromWasm0(arg5, arg6));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_secp256k1recoverpubkey_e68b9de7306fa5e3 = function(arg0, arg1, arg2, arg3, arg4, arg5) {\n        const ret = getObject(arg0).secp256k1_recover_pubkey(getArrayU8FromWasm0(arg1, arg2), getArrayU8FromWasm0(arg3, arg4), arg5);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_ed25519verify_2eee621134dbf28a = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {\n        const ret = getObject(arg0).ed25519_verify(getArrayU8FromWasm0(arg1, arg2), getArrayU8FromWasm0(arg3, arg4), getArrayU8FromWasm0(arg5, arg6));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_ed25519batchverify_b9a9e9fbb322f55a = function(arg0, arg1, arg2, arg3) {\n        const ret = getObject(arg0).ed25519_batch_verify(takeObject(arg1), takeObject(arg2), takeObject(arg3));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_addrvalidate_f61b76a233b1e86e = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).addr_validate(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_addrcanonicalize_5a16e412707a1764 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).addr_canonicalize(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_addrhumanize_782cef8045c3b63c = function(arg0, arg1) {\n        const ret = getObject(arg0).addr_humanize(takeObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_dbread_0038b11a402adfd1 = function(arg0, arg1, arg2) {\n        var v0 = getArrayU8FromWasm0(arg1, arg2).slice();\n        wasm.__wbindgen_free(arg1, arg2 * 1);\n        const ret = getObject(arg0).db_read(v0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_dbwrite_154ea60a39a2099d = function(arg0, arg1, arg2, arg3, arg4) {\n        var v0 = getArrayU8FromWasm0(arg1, arg2).slice();\n        wasm.__wbindgen_free(arg1, arg2 * 1);\n        var v1 = getArrayU8FromWasm0(arg3, arg4).slice();\n        wasm.__wbindgen_free(arg3, arg4 * 1);\n        const ret = getObject(arg0).db_write(v0, v1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_dbremove_f66297dba7b07f81 = function(arg0, arg1, arg2) {\n        var v0 = getArrayU8FromWasm0(arg1, arg2).slice();\n        wasm.__wbindgen_free(arg1, arg2 * 1);\n        const ret = getObject(arg0).db_remove(v0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_abort_06a945d6f3534d6d = function(arg0, arg1, arg2) {\n        try {\n            const ret = getObject(arg0).abort(getStringFromWasm0(arg1, arg2));\n            return addHeapObject(ret);\n        } finally {\n            wasm.__wbindgen_free(arg1, arg2);\n        }\n    };\n    imports.wbg.__wbg_charge_cd0ea37d103c781c = function(arg0, arg1) {\n        const ret = getObject(arg0).charge(takeObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_gascheckpointpush_d0c9db169f1d70f9 = function(arg0, arg1) {\n        const ret = getObject(arg0).gas_checkpoint_push(takeObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_gascheckpointpop_5766fd5dbee45c3e = function(arg0) {\n        const ret = getObject(arg0).gas_checkpoint_pop();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_transactionbegin_9fb4a94c99080cc7 = function(arg0) {\n        const ret = getObject(arg0).transaction_begin();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_transactioncommit_e180d5ccaaa44461 = function(arg0) {\n        const ret = getObject(arg0).transaction_commit();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_transactionrollback_5ef6a3e9e1aef308 = function(arg0) {\n        const ret = getObject(arg0).transaction_rollback();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_error_new = function(arg0, arg1) {\n        const ret = new Error(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_log_be884951cedf1e35 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_is_bigint = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'bigint';\n        return ret;\n    };\n    imports.wbg.__wbindgen_bigint_from_u64 = function(arg0) {\n        const ret = BigInt.asUintN(64, arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_jsval_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) === getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_in = function(arg0, arg1) {\n        const ret = getObject(arg0) in getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_jsval_loose_eq = function(arg0, arg1) {\n        const ret = getObject(arg0) == getObject(arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbg_getwithrefkey_15c62c2b8546208d = function(arg0, arg1) {\n        const ret = getObject(arg0)[getObject(arg1)];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_20cbc34131e76824 = function(arg0, arg1, arg2) {\n        getObject(arg0)[takeObject(arg1)] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_get_57245cc7d7c7619d = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_length_6e3bbe7c8bd4dbd8 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_new_1d9a920c6bfc44a8 = function() {\n        const ret = new Array();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_next_579e583d33566a86 = function(arg0) {\n        const ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_aaef7c8aa5e212ac = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_done_1b73b0672e15f234 = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_value_1ccc36bc03462d71 = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_iterator_6f9d4f28845f426c = function() {\n        const ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_765201544a2b6869 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_97ae9d8645dc388b = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_0b9bfdd97583284e = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_a68214f35c417fa9 = function(arg0, arg1, arg2) {\n        getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_isArray_27c46c67f498e15d = function(arg0) {\n        const ret = Array.isArray(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_ArrayBuffer_e5e48f4762c5610b = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof ArrayBuffer;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_isSafeInteger_dfa0593e8d7ac35a = function(arg0) {\n        const ret = Number.isSafeInteger(getObject(arg0));\n        return ret;\n    };\n    imports.wbg.__wbg_entries_65a76a413fc91037 = function(arg0) {\n        const ret = Object.entries(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_3f3d764d4747d564 = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_8c3f0052272a457a = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_83db9690f9353e79 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_9e1ae1900cb0fbd5 = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_instanceof_Uint8Array_971eeda69eb75003 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Uint8Array;\n        } catch {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbindgen_bigint_get_as_i64 = function(arg0, arg1) {\n        const v = getObject(arg1);\n        const ret = typeof(v) === 'bigint' ? v : undefined;\n        getBigInt64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0n : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n\n}\n\nfunction finalizeInit(instance, module) {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    cachedBigInt64Memory0 = new BigInt64Array();\n    cachedFloat64Memory0 = new Float64Array();\n    cachedInt32Memory0 = new Int32Array();\n    cachedUint8Memory0 = new Uint8Array();\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    const imports = getImports();\n\n    initMemory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, module);\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('typescript_bindings_bg.wasm', import.meta.url);\n    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports);\n\n    const { instance, module } = await load(await input, imports);\n\n    return finalizeInit(instance, module);\n}\n\nexport { initSync }\nexport default init;\n","module.exports = require('./helpers/bundle-url').getBundleURL('hKvBU') + require('./helpers/bundle-manifest').resolve(\"fNRYW\");"],"names":["$f13ecebb1f16f955$export$6503ec6e8aabbaf","$f13ecebb1f16f955$export$f7ad0328861e2f03","$f13ecebb1f16f955$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$ce4ea6902f7a0721$export$bdfd709ae4826697","$ce4ea6902f7a0721$var$bundleURL","$ce4ea6902f7a0721$var$getBaseURL","url","replace","value","err","matches","stack","match","$ce4ea6902f7a0721$var$getBundleURL","parcelRequire","register","JSON","parse","$157d26e5d327b5af$var$heap","Array","fill","undefined","push","Uint8Array","$157d26e5d327b5af$var$cachedTextEncoder","TextEncoder","encodeInto","Int32Array","$157d26e5d327b5af$var$cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","Float64Array","BigInt64Array","getBundleURL","resolve"],"version":3,"file":"typescript_bindings.js.map"}